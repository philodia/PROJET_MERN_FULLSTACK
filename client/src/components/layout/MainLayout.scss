// frontend/src/components/layout/MainLayout.scss

$sidebar-width: 250px; // Doit correspondre à la variable dans Sidebar.scss
$navbar-height: 56px;  // Ajustez si la hauteur de votre navbar est différente
$sidebar-transition-duration: 0.3s;

body.sidebar-open-no-scroll {
  @media (max-width: 991.98px) { // En dessous du breakpoint lg
    overflow: hidden; // Empêcher le scroll du body quand la sidebar mobile est ouverte
  }
}

.main-layout-wrapper {
  // La structure flex-column et min-vh-100 est déjà sur le wrapper
  // pour le sticky footer.

  &.sidebar-is-active {
    // Potentielles classes à appliquer au wrapper principal si la sidebar est active
    // (surtout utile si la sidebar n'est pas `position: fixed` mais pousse le contenu)
  }
}

.app-body-content-wrapper {
  position: relative; // Pour le positionnement de l'overlay
  // Le flex-grow-1 est géré par la classe Bootstrap d-flex sur ce wrapper
  // et flex-grow-1 sur le main content-area.
}

.content-area {
  background-color: var(--bs-body-bg, #fff); // Fond par défaut du contenu
  padding-top: 1rem; // Un padding initial pour espacer de la navbar
                     // Ou gérez le padding via PageContainer ou directement sur les pages.
  transition: margin-left $sidebar-transition-duration ease-in-out;

  // Sur les grands écrans, si la sidebar est toujours visible et ne se superpose pas,
  // le contenu doit être décalé pour ne pas être sous la sidebar.
  @media (min-width: 992px) { // lg breakpoint de Bootstrap
    margin-left: $sidebar-width;
    width: calc(100% - #{$sidebar-width}); // Assurer que le contenu prend la largeur restante
  }
}

// Quand la sidebar est fermée (sur mobile, elle est en margin-left négatif)
// le contenu doit prendre toute la largeur.
// Mais sur grand écran, la sidebar est toujours là (sticky), donc margin-left est toujours appliqué.
// Cette classe `content-shifted` est utile si vous avez un autre mode de sidebar
// qui se superpose et où le contenu ne doit pas être décalé.
// Pour la configuration actuelle avec une sidebar sticky sur desktop, cette classe est moins critique.
// .content-area.content-shifted {
//   @media (min-width: 992px) {
//     // margin-left: $sidebar-width; // Déjà géré ci-dessus
//   }
// }


// L'overlay est déjà stylé dans Sidebar.scss, mais si vous voulez le mettre ici :
// .sidebar-overlay {
//   position: fixed;
//   top: 0;
//   left: 0;
//   width: 100%;
//   height: 100%;
//   background-color: rgba(0, 0, 0, 0.5);
//   z-index: 1019; // Juste en dessous de la sidebar
//   display: none; // Géré par JS

//   &.d-lg-none { // Assurer qu'il ne s'affiche que sur mobile
//     @media (min-width: 992px) {
//       display: none !important;
//     }
//   }
// }
// Si .sidebar-overlay.active est utilisé par JS pour afficher :
// .sidebar-overlay.active {
//    display: block;
// }